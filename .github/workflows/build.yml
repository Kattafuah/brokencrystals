name: build app

on:
  workflow_dispatch:
  

# on:
#    push:
#     branches: stable
   
permissions:
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SAST Scan
        run: grep -r -e "password" -e "secret" -e "keys" .
      
    #   - name: Debug Docker Username
    #     run: echo "Docker Hub username: ${{ vars.DOCKERHUB_USERNAME }}"

      - name: Install npm, docker compose and start
        run: |
            sudo apt-get update
            sudo apt-get upgrade
            sudo apt-get install npm
            sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io
            sudo usermod -aG docker $USER
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.6.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose version

      - name: Build the Docker images
        run: |
           sudo npm ci && npm run build 
           sudo npm ci --prefix client && npm run build --prefix client
           sudo docker-compose --file=docker-compose.local.yml up -d
           sudo docker-compose --file=docker-compose.local.yml up -d --build

      - name: Checking for images built and pulled 
        run: sudo docker images

      # Tagging the Docker images manually using docker tag command

      - name: Tag Docker images
        run: |
            docker tag brokencrystals_nodejs:latest ${{ vars.DOCKERHUB_USERNAME }}/brokencrystals:nodejs-latest
            docker tag postgres:latest ${{ vars.DOCKERHUB_USERNAME }}/brokencrystals:postgres-latest
            docker tag sj26/mailcatcher:latest ${{ vars.DOCKERHUB_USERNAME }}/brokencrystals:mailcatcher-latest
       
    #   docker push kattafuah/brokencrystals:tagname

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Push Docker images
        run: |
          docker push ${{ vars.DOCKERHUB_USERNAME }}/brokencrystals:nodejs-latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/brokencrystals:postgres-latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/brokencrystals:mailcatcher-latest
      

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v4
#         with:
#            github_token: ${{ secrets.CSN_TOKEN }}
#            publish_dir: .

#   dast:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: OWASP ZAP DAST Scan
#         continue-on-error: true
#         run: |
#           docker run --rm -v $(pwd):/zap/wrk:rw zaproxy/zap-stable zap-baseline.py -t 'https://kattafuah.github.io/brokencrystals/' || true
